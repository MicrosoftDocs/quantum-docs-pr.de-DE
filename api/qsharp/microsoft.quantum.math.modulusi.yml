### YamlMime:QSharpType
uid: microsoft.quantum.math.modulusi
name: ModulusI
type: function
namespace: Microsoft.Quantum.Math
summary: Berechnet den kanonischen Rückstand von `value` Modulo `modulus`.
remarks: 'Diese Funktion verhält sich anders, als sich der Operator `%` C# verhält, und Q# As im Ergebnis ist immer eine positive Ganzzahl zwischen 0 und `modulus - 1`, auch wenn der Wert negativ ist.'
syntax: 'function ModulusI (value : Int, modulus : Int) : Int'
input:
  content: '(value : Int, modulus : Int)'
  types:
  - name: value
    summary: Der Wert, von dem die Rückstände berechnet werden.
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Der Modulo, nach dem die Rückstände übernommen werden, muss positiv sein.
    isPrimitive: true
    uid: Int
output:
  content: Int
  types:
  - summary: Ganzzahliger $r $ zwischen 0 und `modulus - 1`, sodass `value - r` durch Modulo teilbar ist.
    isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: 1bb3877b4d66b5ad09dabbc072d7d9fb61813745
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73212088"
